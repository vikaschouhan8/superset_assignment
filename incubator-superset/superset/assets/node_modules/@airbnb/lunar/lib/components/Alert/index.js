"use strict";

exports.__esModule = true;
exports.default = exports.Alert = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _IconFlag = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconFlag"));

var _IconCheckAlt = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconCheckAlt"));

var _IconClose = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconClose"));

var _IconError = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconError"));

var _IconInfo = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconInfo"));

var _IconWarning = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconWarning"));

var _withStyles = _interopRequireDefault(require("../../composers/withStyles"));

var _Row = _interopRequireDefault(require("../Row"));

var _Spacing = _interopRequireDefault(require("../Spacing"));

var _Text = _interopRequireDefault(require("../Text"));

var _Translate = _interopRequireDefault(require("../Translate"));

var _IconButton = _interopRequireDefault(require("../IconButton"));

var _constants = require("../../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const alertColorTypePropType = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)(..._constants.STATUSES);

/** Classify content through the use of colorful alerts. */
class Alert extends _react.default.Component {
  render() {
    const {
      cx,
      children,
      danger,
      hideStatusIcon,
      info,
      inline,
      notice,
      styles,
      success,
      theme,
      title,
      warning,
      onClose
    } = this.props;
    const {
      color,
      unit
    } = theme;
    let StatusIcon = null;
    let iconColor = color.accent.text;

    if (danger) {
      StatusIcon = _IconError.default;
      iconColor = color.core.danger[3];
    } else if (info) {
      StatusIcon = _IconInfo.default;
      iconColor = color.core.primary[3];
    } else if (notice) {
      StatusIcon = _IconFlag.default;
      iconColor = color.core.secondary[3];
    } else if (success) {
      StatusIcon = _IconCheckAlt.default;
      iconColor = color.core.success[3];
    } else if (warning) {
      StatusIcon = _IconWarning.default;
      iconColor = color.core.warning[3];
    }

    return _react.default.createElement("div", {
      className: cx(styles.alert, inline && styles.alert_inline, !hideStatusIcon && !!StatusIcon && styles.alert_statusIcon, danger && styles.alert_danger, info && styles.alert_info, notice && styles.alert_notice, success && styles.alert_success, warning && styles.alert_warning)
    }, _react.default.createElement(_Row.default, {
      middleAlign: !children,
      after: onClose && _react.default.createElement(_IconButton.default, {
        onClick: onClose
      }, _react.default.createElement(_IconClose.default, {
        accessibilityLabel: _Translate.default.phrase('Close', {}, {
          context: 'Close the alert',
          key: 'lunar.common.close'
        }),
        size: unit * 3
      })),
      before: !hideStatusIcon && StatusIcon && _react.default.createElement(StatusIcon, {
        decorative: true,
        color: iconColor,
        size: unit * 3
      })
    }, _react.default.createElement(_Text.default, {
      bold: true
    }, title), children && _react.default.createElement(_Spacing.default, {
      top: 1
    }, _react.default.createElement(_Text.default, null, children))));
  }

}

exports.Alert = Alert;

_defineProperty(Alert, "propTypes", {
  onClose: _propTypes.default.func,
  title: _propTypes.default.any.isRequired,
  inline: _propTypes.default.bool,
  hideStatusIcon: _propTypes.default.bool,
  children: _propTypes.default.node,
  danger: alertColorTypePropType,
  info: alertColorTypePropType,
  notice: alertColorTypePropType,
  success: alertColorTypePropType,
  warning: alertColorTypePropType
});

_defineProperty(Alert, "defaultProps", {
  children: null,
  danger: false,
  hideStatusIcon: false,
  info: false,
  inline: false,
  notice: false,
  success: false,
  warning: false
});

var _default = (0, _withStyles.default)((_ref) => {
  let {
    color,
    unit,
    pattern
  } = _ref;
  return {
    alert: _extends({}, pattern.box, {
      display: 'block',
      alignItems: 'start',
      position: 'relative',
      borderColor: color.core.neutral[1],
      backgroundColor: color.accent.bg,
      overflow: 'hidden',
      padding: unit * 3,
      ':before': {
        content: '" "',
        backgroundColor: color.accent.text,
        position: 'absolute',
        top: 0,
        left: 0,
        width: unit / 2,
        height: '100%'
      }
    }),
    alert_inline: {
      display: 'inline-block'
    },
    alert_danger: {
      ':before': {
        backgroundColor: color.core.danger[3]
      }
    },
    alert_info: {
      ':before': {
        backgroundColor: color.core.primary[3]
      }
    },
    alert_notice: {
      ':before': {
        backgroundColor: color.core.secondary[3]
      }
    },
    alert_success: {
      ':before': {
        backgroundColor: color.core.success[3]
      }
    },
    alert_warning: {
      ':before': {
        backgroundColor: color.core.warning[3]
      }
    },
    alert_statusIcon: {
      paddingLeft: unit * 2.5
    }
  };
}, {
  passThemeProp: true
})(Alert);

exports.default = _default;