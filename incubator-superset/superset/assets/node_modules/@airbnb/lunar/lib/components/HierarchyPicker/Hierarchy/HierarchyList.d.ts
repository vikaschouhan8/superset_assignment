import React from 'react';
import { WithStylesProps } from '../../../composers/withStyles';
import { ItemShape, TreePath, SubTreeHandler, ItemPickedHandler, ItemRenderer } from '../types';
export declare type Props = {
    items?: ItemShape[];
    chosen?: TreePath;
    focus: TreePath;
    maxHeight?: number;
    renderItem?: ItemRenderer;
    parents?: TreePath;
    onSubtree: SubTreeHandler;
    onItemPicked: ItemPickedHandler;
    width?: number;
    verticallyAlign?: boolean;
};
export declare class HierarchyList extends React.Component<Props & WithStylesProps> {
    static defaultProps: {
        chosen: never[];
        items: never[];
        parents: never[];
        verticallyAlign: boolean;
    };
    ref: React.RefObject<HTMLDivElement>;
    isChosen(definition: TreePath): boolean;
    /** Returns the closest <li> to the current document activeElement */
    closestRowToActiveElement(): HTMLLIElement | null;
    private handleDomFocusDeeper;
    private handleDomFocusShallower;
    renderAside(item: ItemShape): JSX.Element | null;
    render(): JSX.Element | null;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=HierarchyList.d.ts.map