"use strict";

exports.__esModule = true;
exports.default = Card;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Content = _interopRequireDefault(require("./Content"));

exports.Content = _Content.default;

var _useStyles = _interopRequireDefault(require("../../hooks/useStyles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const styleSheet = (_ref) => {
  let {
    color,
    pattern
  } = _ref;
  return {
    card: _extends({}, pattern.box, {
      background: color.accent.bg,
      overflow: 'hidden'
    }),
    card_overflow: {
      overflow: 'visible'
    }
  };
};

/**
 * An abstract layout to use as a base for cards.
 */
function Card(_ref2) {
  let {
    children,
    overflow
  } = _ref2;
  const [styles, cx] = (0, _useStyles.default)(styleSheet);
  return _react.default.createElement("div", {
    className: cx(styles.card, overflow && styles.card_overflow)
  }, children);
}

Card.propTypes = {
  children: _propTypes.default.any.isRequired,
  overflow: _propTypes.default.bool
};