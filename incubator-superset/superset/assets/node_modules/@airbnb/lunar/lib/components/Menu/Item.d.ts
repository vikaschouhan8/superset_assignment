import React from 'react';
import { WithStylesProps } from '../../composers/withStyles';
export declare type Props = {
    /** Content within the menu item. */
    children: NonNullable<React.ReactNode>;
    /** Mark the button as disabled. */
    disabled?: boolean;
    /** Mark the item as highlighted. */
    highlighted?: boolean;
    /** Render an anchor link with a URL instead of a button. */
    href?: string;
    /** An icon to display before the item. */
    icon?: React.ReactNode;
    /** Pass an HTML element attribute id. */
    id?: string;
    /** Click handler. */
    onClick?: () => void;
    /** Opens links in a new window. */
    openInNewWindow?: boolean;
    /** Accessibility role. */
    role?: string;
    /** Increase padding. */
    spacious?: boolean;
    /** A sub-menu to display on hover. */
    submenu?: React.ReactNode;
    /** Tab index for the current menu. */
    tabIndex?: number;
    /** Tip to display after the item. */
    tip?: React.ReactNode;
    /** A tracking name to identify this component. */
    trackingName?: string;
};
/** An interactive item within a menu. */
export declare class MenuItem extends React.Component<Props & WithStylesProps> {
    static propTypes: {
        icon: import("prop-types").Requireable<React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>>;
    };
    static defaultProps: {
        disabled: boolean;
        highlighted: boolean;
        href: string;
        icon: null;
        openInNewWindow: boolean;
        role: string;
        spacious: boolean;
        submenu: null;
        tabIndex: number;
        tip: null;
    };
    state: {
        showSubmenu: boolean;
    };
    private handleMouseEnter;
    private handleMouseLeave;
    render(): JSX.Element;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=Item.d.ts.map