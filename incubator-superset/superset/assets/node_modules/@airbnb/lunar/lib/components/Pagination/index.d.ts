import React from 'react';
import PropTypes from 'prop-types';
import { WithStylesProps } from '../../composers/withStyles';
export declare type Props = {
    /** Align arrows in the center */
    centerAlign?: boolean;
    /** Align arrows to the end */
    endAlign?: boolean;
    /** Show fetching state. */
    fetching?: boolean;
    /** Whether it has a next page. */
    hasNext?: boolean;
    /** Whether it has a previous page. */
    hasPrev?: boolean;
    /** Show the first and last page buttons. */
    showBookends?: boolean;
    /** Align arrows to the start */
    startAlign?: boolean;
    /** Current page number. */
    page: number;
    /** Content to label the pages. Default is "Page" */
    pageLabel?: string;
    /** Total page count. Required when `showBookends` is true. */
    pageCount?: number;
    /** Invoked when the first page button is pressed. */
    onFirst?: () => void;
    /** Invoked when the last page button is pressed. */
    onLast?: () => void;
    /** Invoked when the next page button is pressed. */
    onNext: () => void;
    /** Invoked when the previous page button is pressed. */
    onPrevious: () => void;
};
/** Pagination controls. */
export declare class Pagination extends React.Component<Props & WithStylesProps> {
    static defaultProps: {
        centerAlign: boolean;
        endAlign: boolean;
        fetching: boolean;
        hasNext: boolean;
        hasPrev: boolean;
        showBookends: boolean;
        startAlign: boolean;
    };
    static propTypes: {
        centerAlign: PropTypes.Requireable<boolean>;
        endAlign: PropTypes.Requireable<boolean>;
        startAlign: PropTypes.Requireable<boolean>;
        onFirst: PropTypes.Requireable<((...args: any[]) => any) | null>;
        onLast: PropTypes.Requireable<((...args: any[]) => any) | null>;
        pageCount: PropTypes.Requireable<number | null>;
    };
    render(): JSX.Element | null;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=index.d.ts.map