"use strict";

exports.__esModule = true;
exports.default = exports.SortCarets = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _IconCaretUp = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconCaretUp"));

var _IconCaretDown = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconCaretDown"));

var _withStyles = _interopRequireDefault(require("../../composers/withStyles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** Carets to indicate sorting on a table. */
class SortCarets extends _react.default.Component {
  renderCaretUp() {
    const {
      cx,
      up,
      enableUp,
      styles
    } = this.props;
    return up && _react.default.createElement("span", {
      className: cx(styles.caret, styles.caret_up, enableUp ? styles.caret_active : styles.caret_inactive)
    }, _react.default.createElement(_IconCaretUp.default, {
      decorative: true,
      size: "1.6em"
    }));
  }

  renderCaretDown() {
    const {
      cx,
      down,
      enableDown,
      styles
    } = this.props;
    return down && _react.default.createElement("span", {
      className: cx(styles.caret, styles.caret_down, enableDown ? styles.caret_active : styles.caret_inactive)
    }, _react.default.createElement(_IconCaretDown.default, {
      decorative: true,
      size: "1.6em"
    }));
  }

  render() {
    const {
      cx,
      styles,
      up,
      down
    } = this.props;
    return _react.default.createElement("span", {
      className: cx(styles.container, up && down && styles.container_full)
    }, this.renderCaretUp(), this.renderCaretDown());
  }

}

exports.SortCarets = SortCarets;

_defineProperty(SortCarets, "propTypes", {
  down: _propTypes.default.bool,
  enableDown: _propTypes.default.bool,
  enableUp: _propTypes.default.bool,
  up: _propTypes.default.bool
});

_defineProperty(SortCarets, "defaultProps", {
  down: false,
  enableDown: false,
  enableUp: false,
  up: false
});

var _default = (0, _withStyles.default)((_ref) => {
  let {
    color,
    unit
  } = _ref;
  return {
    container: {
      display: 'inline-block',
      verticalAlign: 'middle',
      marginTop: -1,
      width: unit * 1.5,
      height: unit
    },
    container_full: {
      height: unit * 2
    },
    caret: {
      display: 'block',
      position: 'relative',
      width: unit * 1.5,
      height: unit,
      overflow: 'hidden'
    },
    caret_up: {
      '@selectors': {
        '> svg': {
          margin: '-.4em',
          marginTop: '-.5em'
        }
      }
    },
    caret_down: {
      '@selectors': {
        '> svg': {
          margin: '-.4em',
          marginTop: '-.6em'
        }
      }
    },
    caret_inactive: {
      color: color.core.neutral[3]
    },
    caret_active: {
      color: color.core.neutral[4]
    }
  };
})(SortCarets);

exports.default = _default;