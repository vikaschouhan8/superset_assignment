"use strict";

exports.__esModule = true;
exports.default = exports.SearchResult = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _groupBy = _interopRequireDefault(require("lodash/groupBy"));

var _withStyles = _interopRequireDefault(require("../../../composers/withStyles"));

var _Text = _interopRequireDefault(require("../../Text"));

var _Highlight = _interopRequireDefault(require("./Highlight"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class SearchResult extends _react.default.Component {
  render() {
    const {
      cx,
      styles,
      item,
      formattedParents,
      matches,
      query
    } = this.props;
    const {
      description,
      label,
      name
    } = item;
    const mbk = (0, _groupBy.default)(matches, 'key');
    const [labelMatch = null] = mbk.label || [];
    const [descMatch = null] = mbk.description || [];
    const [keywMatch = null] = mbk.keywords || [];
    const [longest] = query.split(/\s{1,}/).sort((a, b) => b.length - a.length);
    return _react.default.createElement("div", {
      className: cx(styles.resultItem)
    }, _react.default.createElement(_Text.default, {
      bold: true
    }, formattedParents, _react.default.createElement(_Highlight.default, {
      word: longest,
      match: labelMatch,
      fallback: label || name
    })), description && _react.default.createElement(_Text.default, null, _react.default.createElement(_Highlight.default, {
      word: longest,
      match: descMatch,
      fallback: description
    })), keywMatch && _react.default.createElement(_Text.default, null, _react.default.createElement(_Highlight.default, {
      word: longest,
      match: keywMatch
    })));
  }

}

exports.SearchResult = SearchResult;

_defineProperty(SearchResult, "propTypes", {
  item: _propTypes.default.any.isRequired,
  formattedParents: _propTypes.default.string.isRequired,
  matches: _propTypes.default.arrayOf(_propTypes.default.any),
  query: _propTypes.default.string
});

_defineProperty(SearchResult, "defaultProps", {
  matches: [],
  query: ''
});

var _default = (0, _withStyles.default)((_ref) => {
  let {
    color,
    unit
  } = _ref;
  return {
    resultItem: {
      padding: unit,
      wordBreak: 'break-word'
    }
  };
})(SearchResult);

exports.default = _default;