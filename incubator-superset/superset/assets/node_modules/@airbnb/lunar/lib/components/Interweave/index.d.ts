import React from 'react';
import { InterweaveProps as BaseInterweaveProps, MatcherInterface, FilterInterface } from 'interweave';
import { WithEmojiDataProps } from 'interweave-emoji';
export declare const globalMatchers: MatcherInterface<any>[];
export declare const globalFilters: FilterInterface[];
export declare type Props = BaseInterweaveProps & {
    /** Render any found links using large prop. */
    large?: boolean;
    /** Only run these matchers (by name). */
    onlyMatchers?: string[];
    /** Render any found links using small prop. */
    small?: boolean;
    /** Convert emoticons to emojis. */
    withEmoticons?: boolean;
};
/**
 * Safely render HTML, filter attributes, autowrap text with matchers, render emoji characters,
 * and much more.
 */
export declare class Interweave extends React.PureComponent<Props & WithEmojiDataProps> {
    static defaultProps: {
        content: string;
        filters: never[];
        large: boolean;
        matchers: never[];
        onlyMatchers: never[];
        small: boolean;
        withEmoticons: boolean;
    };
    render(): JSX.Element;
}
declare const _default: React.ComponentType<BaseInterweaveProps & {
    /** Render any found links using large prop. */
    large?: boolean | undefined;
    /** Only run these matchers (by name). */
    onlyMatchers?: string[] | undefined;
    /** Render any found links using small prop. */
    small?: boolean | undefined;
    /** Convert emoticons to emojis. */
    withEmoticons?: boolean | undefined;
} & import("interweave-emoji").WithEmojiDataWrapperProps>;
export default _default;
//# sourceMappingURL=index.d.ts.map