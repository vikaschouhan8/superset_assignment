"use strict";

exports.__esModule = true;
exports.default = exports.ButtonGroup = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _withStyles = _interopRequireDefault(require("../../composers/withStyles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** Horizontally align `Button`s with a consistent gutter between each. */
class ButtonGroup extends _react.default.Component {
  render() {
    const {
      cx,
      children,
      stacked,
      styles
    } = this.props;
    return _react.default.createElement("div", {
      className: cx(styles.buttonGroup, stacked && styles.buttonGroup_stacked)
    }, _react.default.Children.map(children, child => child ? _react.default.createElement("div", {
      className: cx(stacked ? styles.cell_stacked : styles.cell)
    }, child) : null));
  }

}

exports.ButtonGroup = ButtonGroup;

_defineProperty(ButtonGroup, "propTypes", {
  children: _propTypes.default.any.isRequired,
  stacked: _propTypes.default.bool
});

_defineProperty(ButtonGroup, "defaultProps", {
  stacked: false
});

var _default = (0, _withStyles.default)((_ref) => {
  let {
    unit
  } = _ref;
  return {
    buttonGroup: {
      display: 'flex',
      alignItems: 'center'
    },
    buttonGroup_stacked: {
      flexDirection: 'column',
      alignItems: 'stretch'
    },
    cell: {
      marginRight: unit,
      ':last-of-type': {
        marginRight: 0
      },
      ':empty': {
        display: 'none'
      }
    },
    cell_stacked: {
      marginBottom: unit,
      ':last-of-type': {
        marginBottom: 0
      }
    }
  };
})(ButtonGroup);

exports.default = _default;