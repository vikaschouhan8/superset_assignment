"use strict";

exports.__esModule = true;
exports.default = RotateControls;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _IconRotateLeft = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconRotateLeft"));

var _IconRotateRight = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconRotateRight"));

var _IconButton = _interopRequireDefault(require("../IconButton"));

var _ButtonGroup = _interopRequireDefault(require("../ButtonGroup"));

var _Translate = _interopRequireDefault(require("../Translate"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Rotate controls that can be used with an image viewer component */
function RotateControls(props) {
  const {
    onRotation,
    rotation = 0
  } = props;
  const handleRotateLeft = (0, _react.useCallback)(() => onRotation(rotation - 90 < 0 ? 270 : rotation - 90), [rotation]);
  const handleRotateRight = (0, _react.useCallback)(() => onRotation((rotation + 90) % 360), [rotation]);
  return _react.default.createElement(_ButtonGroup.default, null, _react.default.createElement(_IconButton.default, {
    onClick: handleRotateLeft
  }, _react.default.createElement(_IconRotateLeft.default, {
    accessibilityLabel: _Translate.default.phrase('Rotate counter clockwise', {}, 'Label for button that rotates an image counter clockwise'),
    size: "2em"
  })), _react.default.createElement(_IconButton.default, {
    onClick: handleRotateRight
  }, _react.default.createElement(_IconRotateRight.default, {
    accessibilityLabel: _Translate.default.phrase('Rotate clockwise', {}, 'Label for button that rotates an image clockwise'),
    size: "2em"
  })));
}

RotateControls.propTypes = {
  rotation: _propTypes.default.number,
  onRotation: _propTypes.default.func.isRequired
};