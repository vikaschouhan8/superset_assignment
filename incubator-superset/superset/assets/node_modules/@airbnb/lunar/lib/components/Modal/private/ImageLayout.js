"use strict";

exports.__esModule = true;
exports.default = exports.MAX_HEIGHT_IMAGE_SMALL = exports.MAX_HEIGHT_IMAGE = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _withStyles = _interopRequireDefault(require("../../../composers/withStyles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const MAX_HEIGHT_IMAGE = 720;
exports.MAX_HEIGHT_IMAGE = MAX_HEIGHT_IMAGE;
const MAX_HEIGHT_IMAGE_SMALL = 420;
exports.MAX_HEIGHT_IMAGE_SMALL = MAX_HEIGHT_IMAGE_SMALL;

class ModalImageLayout extends _react.default.Component {
  render() {
    const {
      cx,
      children,
      sizes,
      srcSet,
      type,
      url,
      styles
    } = this.props;
    return _react.default.createElement("div", {
      className: cx(styles.splitContent)
    }, _react.default.createElement("div", {
      className: cx(styles.splitContentPane)
    }, children), _react.default.createElement("div", {
      className: cx(styles.splitContentPane, styles.splitContentImagePane)
    }, type === 'center' && _react.default.createElement("img", {
      className: cx(styles.image),
      src: url,
      srcSet: srcSet && srcSet.join(','),
      sizes: sizes && sizes.join(','),
      alt: ""
    }), type === 'cover' && _react.default.createElement("img", {
      className: cx(styles.image, styles.imageCover),
      src: url,
      srcSet: srcSet && srcSet.join(','),
      alt: ""
    })));
  }

}

_defineProperty(ModalImageLayout, "propTypes", {
  sizes: _propTypes.default.arrayOf(_propTypes.default.string),
  srcSet: _propTypes.default.arrayOf(_propTypes.default.string),
  type: _propTypes.default.oneOf(['center', 'cover']).isRequired,
  url: _propTypes.default.string.isRequired,
  children: _propTypes.default.any.isRequired
});

var _default = (0, _withStyles.default)((_ref) => {
  let {
    responsive,
    ui,
    unit
  } = _ref;
  return {
    splitContent: {
      display: 'flex'
    },
    splitContentPane: {
      flex: '1'
    },
    splitContentImagePane: {
      borderLeft: ui.border,
      alignItems: 'center',
      display: 'flex',
      justifyContent: 'center',
      overflow: 'hidden',
      position: 'relative',
      '@media': {
        [responsive.xsmall]: {
          display: 'none'
        }
      }
    },
    image: {
      display: 'block',
      objectFit: 'contain',
      maxWidth: '100%',
      maxHeight: '100%',
      margin: unit * 3
    },
    imageCover: {
      objectFit: 'cover',
      height: '100%',
      width: '100%',
      margin: 0
    }
  };
})(ModalImageLayout);

exports.default = _default;