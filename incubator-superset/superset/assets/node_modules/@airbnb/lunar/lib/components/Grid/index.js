"use strict";

exports.__esModule = true;
exports.default = exports.Grid = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _withStyles = _interopRequireDefault(require("../../composers/withStyles"));

var _Col = _interopRequireDefault(require("./Col"));

exports.Col = _Col.default;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const horizontalAlignProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('centerAlign', 'startAlign', 'endAlign');
const verticalAlignProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('bottomAlign', 'middleAlign', 'topAlign');

/** A grid to contain columns. */
class Grid extends _react.default.Component {
  render() {
    const {
      cx,
      bottomAlign,
      centerAlign,
      children,
      endAlign,
      middleAlign,
      reversed,
      startAlign,
      styles,
      topAlign
    } = this.props;
    return _react.default.createElement("section", {
      className: cx(styles.grid, reversed && styles.grid_reversed, bottomAlign && styles.grid_bottom, middleAlign && styles.grid_middle, topAlign && styles.grid_top, startAlign && styles.grid_start, endAlign && styles.grid_end, centerAlign && styles.grid_center)
    }, children);
  }

}

exports.Grid = Grid;

_defineProperty(Grid, "propTypes", {
  reversed: _propTypes.default.bool,
  bottomAlign: verticalAlignProp,
  centerAlign: horizontalAlignProp,
  children: (0, _airbnbPropTypes.childrenOfType)(_Col.default).isRequired,
  endAlign: horizontalAlignProp,
  middleAlign: verticalAlignProp,
  startAlign: horizontalAlignProp,
  topAlign: verticalAlignProp
});

_defineProperty(Grid, "defaultProps", {
  bottomAlign: false,
  centerAlign: false,
  endAlign: false,
  middleAlign: false,
  reversed: false,
  startAlign: false,
  topAlign: false
});

var _default = (0, _withStyles.default)((_ref) => {
  let {
    unit
  } = _ref;
  return {
    grid: {
      display: 'flex',
      flex: '0 1 auto',
      flexDirection: 'row',
      flexWrap: 'nowrap',
      alignItems: 'stretch',
      justifyContent: 'space-between',
      marginLeft: -unit,
      marginRight: -unit
    },
    grid_reversed: {
      flexDirection: 'row-reverse'
    },
    grid_center: {
      justifyContent: 'center'
    },
    grid_start: {
      justifyContent: 'flex-start'
    },
    grid_end: {
      justifyContent: 'flex-end'
    },
    grid_top: {
      alignItems: 'flex-start'
    },
    grid_middle: {
      alignItems: 'center'
    },
    grid_bottom: {
      alignItems: 'flex-end'
    }
  };
})(Grid);

exports.default = _default;