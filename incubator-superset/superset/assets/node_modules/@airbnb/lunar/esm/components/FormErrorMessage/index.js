import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import withStyles from '../../composers/withStyles';
import StatusText from '../StatusText';

/** Display a simple error message for use within forms. */
export class FormErrorMessage extends React.Component {
  render() {
    const {
      cx,
      id,
      error,
      styles
    } = this.props;

    if (!error) {
      return null;
    }

    return React.createElement("div", {
      id: id + "-error",
      role: "alert",
      "aria-live": "polite",
      className: cx(styles.error)
    }, React.createElement(StatusText, {
      danger: true
    }, error));
  }

}

_defineProperty(FormErrorMessage, "propTypes", {
  id: _pt.string.isRequired,
  error: _pt.string
});

export default withStyles((_ref) => {
  let {
    unit
  } = _ref;
  return {
    error: {
      marginTop: unit
    }
  };
})(FormErrorMessage);