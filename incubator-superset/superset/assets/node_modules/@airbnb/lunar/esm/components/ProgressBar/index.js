import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { between, forbidExtraProps } from 'airbnb-prop-types';
import withStyles from '../../composers/withStyles';

/** A bar to represent the progress to completion. */
export class ProgressBar extends React.Component {
  render() {
    const {
      cx,
      percent,
      leading,
      trailing,
      styles
    } = this.props;
    return React.createElement("div", {
      className: cx(styles.wrapper)
    }, React.createElement("div", {
      className: cx(styles.bar, !leading && styles.bar_leading, !trailing && styles.bar_trailing)
    }, React.createElement("div", {
      className: cx(styles.bar, !leading && styles.bar_leading, !trailing && styles.bar_trailing, styles.progress),
      style: {
        width: percent + "%"
      }
    })));
  }

}

_defineProperty(ProgressBar, "propTypes", {
  trailing: _pt.bool,
  leading: _pt.bool,
  percent: between({
    gte: 0,
    lte: 100
  }).isRequired
});

_defineProperty(ProgressBar, "defaultProps", {
  leading: false,
  trailing: false
});

export default withStyles((_ref) => {
  let {
    color,
    unit,
    ui
  } = _ref;
  return {
    wrapper: {
      paddingTop: unit / 4,
      paddingBottom: unit / 4
    },
    bar: {
      height: unit / 2,
      background: color.core.primary[1]
    },
    bar_leading: {
      borderTopRightRadius: ui.borderRadius,
      borderBottomRightRadius: ui.borderRadius
    },
    bar_trailing: {
      borderTopLeftRadius: ui.borderRadius,
      borderBottomLeftRadius: ui.borderRadius
    },
    progress: {
      background: color.core.primary[6]
    }
  };
})(ProgressBar);