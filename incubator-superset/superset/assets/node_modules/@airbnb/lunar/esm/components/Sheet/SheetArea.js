import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import withStyles from '../../composers/withStyles';
import SheetContext from './SheetContext';

/** Container in which to render sheets. */
export class SheetArea extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      visible: false
    });

    _defineProperty(this, "setSheetVisible", visible => {
      this.setState({
        visible
      });
    });
  }

  render() {
    const {
      cx,
      styles,
      children
    } = this.props;
    const {
      visible
    } = this.state;
    return React.createElement(SheetContext.Provider, {
      value: this.setSheetVisible
    }, React.createElement("div", {
      className: cx(visible && styles.sheet_visible)
    }, children));
  }

}

_defineProperty(SheetArea, "propTypes", {
  children: _pt.any.isRequired
});

export default withStyles(() => ({
  sheet_visible: {
    position: 'relative',
    overflow: 'hidden'
  }
}))(SheetArea);