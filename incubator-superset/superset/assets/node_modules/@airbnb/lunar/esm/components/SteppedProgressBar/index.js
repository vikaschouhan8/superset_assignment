import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { childrenOfType, forbidExtraProps } from 'airbnb-prop-types';
import withStyles from '../../composers/withStyles';
import Step from './Step';

/** A progress bar separated into individual steps. */
export class SteppedProgressBar extends React.Component {
  render() {
    const {
      cx,
      children,
      styles
    } = this.props;
    const steps = React.Children.count(children);
    return React.createElement("div", {
      className: cx(styles.bar)
    }, React.Children.map(children, (child, index) => React.cloneElement(child, {
      first: index === 0,
      last: index === steps - 1
    })));
  }

}

_defineProperty(SteppedProgressBar, "propTypes", {
  children: childrenOfType(Step).isRequired
});

export { Step };
export default withStyles(() => ({
  bar: {
    display: 'flex'
  }
}))(SteppedProgressBar);