function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import Mark from './Mark';
const StyledSecondaryMark = Mark.extendStyles((_ref) => {
  let {
    color
  } = _ref;
  return {
    mark: {
      '::after': {
        backgroundColor: color.core.warning[2]
      }
    },
    mark_highlight: {
      opacity: 0.75,
      backgroundColor: color.core.warning[2]
    }
  };
});
/** A mark to use for secondary actions. Supports all the same props as `Mark`. */

export default function SecondaryMark(_ref2) {
  let {
    children
  } = _ref2,
      props = _objectWithoutPropertiesLoose(_ref2, ["children"]);

  return React.createElement(StyledSecondaryMark, props, children);
}