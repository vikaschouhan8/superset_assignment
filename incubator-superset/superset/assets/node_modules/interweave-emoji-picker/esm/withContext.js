function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
export var Context = React.createContext({
  classNames: {},
  messages: {}
});
export default function withContext(Component) {
  return function WithContextWrapper(props) {
    return React.createElement(Context.Consumer, null, function (context) {
      return React.createElement(Component, _extends({}, props, {
        context: context
      }));
    });
  };
}