export declare type CodePoint = number;
export declare type Emoticon = string;
export declare type Gender = 0 | 1;
export declare type Group = number;
export declare type GroupKey = 'smileys-people' | 'animals-nature' | 'food-drink' | 'travel-places' | 'activities' | 'objects' | 'symbols' | 'flags';
export declare type Hexcode = string;
export declare type Presentation = 0 | 1;
export declare type Shortcode = string;
export declare type SkinTone = 1 | 2 | 3 | 4 | 5;
export declare type SkinToneKey = 'light' | 'medium-light' | 'medium' | 'medium-dark' | 'dark';
export declare type Subgroup = number;
export declare type Unicode = string;
export interface CompactEmoji {
    annotation: string;
    emoticon?: Emoticon;
    group: Group;
    hexcode: Hexcode;
    order: number;
    shortcodes: Shortcode[];
    skins?: CompactEmoji[];
    tags: string[];
    unicode: Unicode;
}
export interface Emoji {
    annotation: string;
    emoji: Unicode;
    emoticon?: Emoticon;
    gender?: Gender;
    group: Group;
    hexcode: Hexcode;
    name: string;
    order: number;
    shortcodes: Shortcode[];
    skins?: Emoji[];
    subgroup: Subgroup;
    tags: string[];
    text: Unicode;
    tone?: SkinTone;
    type: Presentation;
    version: number;
}
export interface GroupDataset {
    groups: {
        [index: string]: string;
    };
    subgroups: {
        [index: string]: string;
    };
    hierarchy: {
        [index: string]: number[];
    };
}
export interface VersionDataset {
    [version: string]: string[];
}
