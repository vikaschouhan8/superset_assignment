import _pt from "prop-types";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import Link from './Link';

var Hashtag = function (_React$PureComponent) {
  _inheritsLoose(Hashtag, _React$PureComponent);

  function Hashtag() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Hashtag.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        encodeHashtag = _this$props.encodeHashtag,
        hashtagUrl = _this$props.hashtagUrl,
        preserveHash = _this$props.preserveHash,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "encodeHashtag", "hashtagUrl", "preserveHash"]);

    var hashtag = String(children);

    if (!preserveHash && hashtag.charAt(0) === '#') {
      hashtag = hashtag.slice(1);
    }

    if (encodeHashtag) {
      hashtag = encodeURIComponent(hashtag);
    }

    var url = hashtagUrl || '{{hashtag}}';

    if (typeof url === 'function') {
      url = url(hashtag);
    } else {
      url = url.replace('{{hashtag}}', hashtag);
    }

    return React.createElement(Link, _extends({}, props, {
      href: url
    }), children);
  };

  return Hashtag;
}(React.PureComponent);

_defineProperty(Hashtag, "propTypes", {
  children: _pt.string.isRequired,
  encodeHashtag: _pt.bool,
  hashtagName: _pt.string.isRequired,
  hashtagUrl: _pt.oneOfType([_pt.string, _pt.func]),
  preserveHash: _pt.bool
});

_defineProperty(Hashtag, "defaultProps", {
  encodeHashtag: false,
  hashtagUrl: '{{hashtag}}',
  preserveHash: false
});

export { Hashtag as default };